---
name: Build Documentation
on:
  workflow_dispatch:
  push:
    branches: [v1]
    paths:
      - docs/*
      - examples/*
      - pyproject.toml
      - .github/workflows/docs.yml
  pull_request:
    branches: [v1]
    paths:
      - docs/*
      - examples/*
      - pyproject.toml
      - .github/workflows/docs.yml

jobs:
  docs:
    defaults:
      run:
        shell: bash -e -l {0}
    env:
      branch_name: ${{ github.head_ref || github.ref_name }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        include:
          - os: ubuntu-latest
            label: linux-64

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pixi env
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: "v0.43.0"
          environments: docs
          locked: false
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'v1' }}

      # if we're not publishing we don't have to write them, so we might as well
      # save ourself a bunch of IO time
      - name: Generate dummy docs
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          pixi run -e docs docs-dummy

      - name: Generate docs
        if: ${{ github.event_name != 'pull_request' && !github.event.act }}
        run: |
          pixi run -e docs docs-html
          echo "DOC_VERSION=$(pixi run --locked -e docs python -c 'from hydromt_fiat import __version__ as v; print("dev" if "dev" in v else "v"+v.replace(".dev",""))')" >> $GITHUB_ENV

      # - name: Upload to GitHub Pages
      #   if: ${{ github.event_name != 'pull_request' && !github.event.act }}
      #   uses: peaceiris/actions-gh-pages@v3.9.3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./docs/_build/html
      #     exclude_assets: .buildinfo,_sources/*,_examples/*.ipynb
      #     destination_dir: ./${{ env.DOC_VERSION }}
      #     keep_files: false
      #     full_commit_message: Deploy ${{ env.DOC_VERSION }} to GitHub Pages
